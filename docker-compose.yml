version: "3.9"

services:
  db:
    image: postgres:16
    container_name: ${COMPOSE_PROJECT_NAME:-incidents}_db
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-incidents_db}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db_init:/docker-entrypoint-initdb.d
    networks:
      - incidents_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME:-incidents}_api
    ports:
      - "${API_PORT:-3000}:3000"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-incidents_db}
      - NODE_ENV=${NODE_ENV:-development}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - incidents_net
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000/incidents",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        - API_URL=${API_URL:-http://localhost:3000}
    container_name: ${COMPOSE_PROJECT_NAME:-incidents}_client
    ports:
      - "${CLIENT_PORT:-8080}:80"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - incidents_net
    restart: unless-stopped
    environment:
      - API_URL=${API_URL:-http://api:3000}

volumes:
  postgres_data:
    name: ${COMPOSE_PROJECT_NAME:-incidents}_postgres_data

networks:
  incidents_net:
    name: ${COMPOSE_PROJECT_NAME:-incidents}_net
    driver: bridge
